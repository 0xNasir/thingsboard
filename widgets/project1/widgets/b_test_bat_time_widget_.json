{
  "widgetsBundle": {
    "alias": "b_test_bat_time_widget_",
    "title": "b Test Bat time widget.",
    "image": null,
    "description": null
  },
  "widgetTypes": [
    {
      "alias": "query_widget",
      "name": "Search Widget",
      "image": null,
      "description": null,
      "descriptor": {
        "type": "latest",
        "sizeX": 7.5,
        "sizeY": 3,
        "resources": [],
        "templateHtml": "<div class=\"query_bar\" [style.background-color]=\"buttonBgColor\">\n    <div style=\"display:flex; padding-bottom: 10px;\">\n        <div class=\"filter-container\">\n        \t<div class=\"ft-inner\">\n        \t\t<div class=\"first satl-kushtia-config\" style=\"display:flex; gap: 10px;\" [style.background-color]=\"settings?.topFilterBgColor\" [style.color]=\"color\">\n        \t\t\t<mat-form-field class=\"report-type satl-report-ff\" appearance=\"outline\" [style.width]=\"selectedType=='Today'?'100%':selectedType=='Custom'?'33.33%':'50%'\">\n    \t\t\t        <mat-label [style.color]=\"color\">Select type</mat-label>\n                        <mat-select id=\"report-type\"\n                            [(value)]=\"selectedType\"\n                            (selectionChange)=\"typeSelect($event)\"\n                            required [disabled]=\"dataMode=='realtime'\">\n                            <mat-option\n                                *ngFor=\"let reportType of reportTypes\"\n                                [value]=\"reportType\"\n                                >\n                                {{reportType}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n        \t\t\t\n        \t\t\t<mat-form-field *ngIf=\"selectedType=='Daily'||selectedType=='Custom'\" class=\"start-date satl-report-ff\" appearance=\"outline\" floatLabel=\"never\" [style.width]=\"selectedType=='Custom'?'33.33%':'50%'\">\n                        <mat-label [style.color]=\"color\"><span *ngIf=\"selectedType=='Custom'\">Start Date</span><span *ngIf=\"selectedType=='Daily'\">Select Date</span></mat-label>\n                        <input matInput\n                            id=\"startDate\"\n                            [max]=\"maxStartDate\"\n                            (dateChange)=\"startDateChanege($event)\"\n                            [matDatepicker]=\"startPicker\"\n                            (click)=\"openDatePicker(startPicker)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\n                        <mat-datepicker #startPicker></mat-datepicker>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"selectedType=='Custom'\" class=\"start-date satl-report-ff\" appearance=\"outline\" floatLabel=\"never\" style=\"width: 33.33%\">\n                        <mat-label [style.color]=\"color\">End Date</mat-label>\n                        <input matInput\n                            id=\"endDate\"\n                            [min]=\"selectedStartDate\"\n                            [max]=\"maxEndDate\"\n                            [matDatepicker]=\"endPicker\"\n                            (dateChange)=\"endDateChanege($event)\"\n                            (click)=\"openDatePicker(endPicker)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\n                        <mat-datepicker #endPicker></mat-datepicker>\n                    </mat-form-field>\n    \n                    <mat-form-field\n                        *ngIf=\"selectedType=='Monthly'\"\n                        appearance=\"outline\" class=\"satl-report-ff\" floatLabel=\"never\" style=\"width: 50%;\">\n                        <mat-label\n                            [style.color]=\"color\">\n                            Select Month</mat-label>\n                        <input matInput\n                            id=\"startDate\"\n                            [max]=\"maxEndDate\"\n                            [matDatepicker]=\"startPicker\"\n                            (click)=\"openDatePicker(startPicker)\"\n                            required>\n                        <mat-datepicker-toggle\n                            matSuffix\n                            [for]=\"startPicker\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #startPicker\n                            startView=\"year\"\n                            (monthSelected)=\"selectStartDate($event, startPicker, 'YYYY-MM')\"\n                            id=\"xDts\">\n                        </mat-datepicker>\n                    </mat-form-field>\n    \n                    <mat-form-field\n                        *ngIf=\"selectedType=='Yearly'\"\n                        appearance=\"outline\" class=\"satl-report-ff\" floatLabel=\"never\" style=\"width: 50%;\">\n                        <mat-label\n                            [style.color]=\"color\">\n                            Select Year</mat-label>\n                        <input matInput\n                            id=\"startDate\"\n                            [max]=\"maxEndDate\"\n                            [matDatepicker]=\"startPicker\"\n                            (click)=\"openDatePicker(startPicker)\"\n                            required>\n                        <mat-datepicker-toggle\n                            matSuffix\n                            [for]=\"startPicker\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #startPicker\n                            startView=\"multi-year\"\n                            (yearSelected)=\"selectStartDate($event, startPicker, 'YYYY')\">\n                        </mat-datepicker>\n                    </mat-form-field>\n        \t\t</div>\n        \t</div>\n        </div>\n    </div>\n</div>",
        "templateCss": "*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n\n/**\n*==========================================\nCSS for input, date picker and select option\n*============================================\n*/\n.satl-kushtia-config .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: inherit!important; /* Override outline color. */\n}\n\n.mat-form-field-appearance-outline .mat-form-field-infix {\n    padding: 0.7em 0;\n    border-top: 0.4375em solid transparent;\n}\n\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label, .mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.19375em) scale(.75);\n    width: 133.3333333333%;\n}\n.mat-select-arrow,\nspan.mat-select-value-text span.mat-select-min-line{\n    color: inherit!important;\n}\n.mat-select-value{\n    color: white;\n}\nbutton.mat-icon-button{\n    color: white;\n}\n.filter-container{\n    width: 50%;\n    padding: 0 10px;\n\tcolor: white;\n\tmargin: 0 auto;\n}\n.first{\n\tpadding: 5px 10px;\n\tborder-radius: 10px;\n\tfont-size: 20px;\n}\n\n/* CSS For modifying scrollbar */\ndiv.wrapper::-webkit-scrollbar{\n  width: 12px;\n}\ndiv.wrapper{\n  scrollbar-width: thin;\n  scrollbar-color: #90A4AE #CFD8DC;\n}\ndiv.wrapper::-webkit-scrollbar-track{\n  background: #CFD8DC;\n}\ndiv.wrapper::-webkit-scrollbar-thumb{\n  background-color: #90A4AE ;\n  border-radius: 6px;\n  border: 3px solid #CFD8DC;\n}\n\n\n",
        "controllerScript": "self.onInit = function() {\n    $(document).ready(function(){\n      self.onResize();\n    });\n    \n    const $scope = self.ctx.$scope;\n    $scope.maxEndDate = new Date();\n    $scope.maxStartDate = new Date();\n    $scope.color = self.ctx.widgetConfig.color;\n    $scope.buttonBgColor = self.ctx.widgetConfig.backgroundColor;\n    $scope.settings=self.ctx.settings;\n    $scope.reportTypes=['Today', 'Daily', 'Monthly', 'Yearly', 'Custom'];\n    $scope.selectedType='Today';\n    // selectTodayType();\n    $scope.selectedStartDate;\n    $scope.selectedEndDate;\n    // $scope.minStartDate = $scope.selectedStartDate;\n    let token = localStorage.getItem('jwt_token');\n    \n    \n    $scope.openDatePicker=function(dp) {\n        dp.open();\n    }\n    $scope.selectStartDate=function(eventData, dp, format) {\n        $scope.selectedStartDate = eventData;\n        $(\"#startDate\").val(moment(eventData).format(format));\n        \n        if($scope.selectedType==='Monthly'){\n            let startTime = new Date(moment($scope.selectedStartDate).format('YYYY-MM-DD 06:00:00'));\n            self.ctx.timewindowFunctions.onUpdateTimewindow(startTime.getTime(),startTime.setMonth(startTime.getMonth()+1), 3600000);\n        }\n        if($scope.selectedType==='Yearly'){\n            let startTime = new Date(moment($scope.selectedStartDate).format('YYYY-MM-DD 06:00:00'));\n            let endTime = new Date(moment(startTime).add(1, 'year'));\n            self.ctx.timewindowFunctions.onUpdateTimewindow(startTime.getTime(),endTime.getTime(), 3600000);\n        }\n        self.ctx.detectChanges();\n        dp.close();\n    }\n    $scope.startDateChanege=function($event){\n        $scope.selectedStartDate = $event.value;\n        \n        if($scope.selectedType==='Daily'){\n            let startTime = new Date(moment($scope.selectedStartDate).format('YYYY-MM-DD 06:00:00'));\n            self.ctx.timewindowFunctions.onUpdateTimewindow(startTime.getTime(),startTime.setDate(startTime.getDate()+1), 12);\n        }else{\n            if($scope.selectedEndDate){\n                let startTime = new Date(moment($scope.selectedStartDate).format('YYYY-MM-DD 06:00:00'));\n                let endTime = new Date(moment($scope.selectedEndDate).format('YYYY-MM-DD 06:00:00'));\n                self.ctx.timewindowFunctions.onUpdateTimewindow(startTime.getTime(),endTime.getTime(), 24*3600000);\n            }\n        }\n        self.ctx.detectChanges();\n    }\n    $scope.endDateChanege=function($event) {\n        $scope.selectedEndDate = $event.value;\n        $scope.maxStartDate = $scope.selectedEndDate;\n        if($scope.selectedStartDate){\n            let startTime = new Date(moment($scope.selectedStartDate).format('YYYY-MM-DD 06:00:00'));\n            let endTime = new Date(moment($scope.selectedEndDate).format('YYYY-MM-DD 06:00:00'));\n            self.ctx.timewindowFunctions.onUpdateTimewindow(startTime.getTime(),endTime.getTime(), 3600000);\n        }\n        self.ctx.detectChanges();\n    }\n    let selectTodayType = () => {\n        // let currentHour = new Date(new Date().getTime()-(12*60*60*1000)).getHours();\n        let currentHour = new Date().getHours();\n        let startTime, endTime;\n        if(currentHour>=0 && currentHour<=6){\n            endTime = new Date(moment(new Date()).format('YYYY-MM-DD 06:00:00'));\n            startTime = new Date(moment(endTime).subtract(1, 'days').format('YYYY-MM-DD 06:00:00'));\n        }else{\n            startTime = new Date(moment(new Date()).format('YYYY-MM-DD 06:00:00'));\n            endTime = new Date(moment(startTime).add(1, 'days').format('YYYY-MM-DD 06:00:00'));\n        }\n        self.ctx.timewindowFunctions.onUpdateTimewindow(startTime.getTime(),endTime.getTime(), 3600000);\n    }\n    selectTodayType();\n    \n    $scope.typeSelect = function($event){\n        selectType = $event.value;\n        $scope.selectedType=selectType;\n        $scope.maxStartDate = new Date();\n        \n        if(selectType=='Today'){\n            selectTodayType();\n        }\n    }\n    \n    $scope.openDatePicker=(picker)=>{\n        picker.open();\n    }\n}\n\nself.onDataUpdated = function() {\n    // const $scope=self.ctx.$scope;\n    // let token = localStorage.getItem('jwt_token');\n    // if(self.ctx.data.length){\n    //     if(self.ctx.data[0].data.length){\n    //         $scope.queryform.get('startDate').setValue(new Date(self.ctx.data[0].data[self.ctx.data[0].data.length-1][0]));\n    //         const strt=new Date(moment(new Date(self.ctx.data[0].data[0][0])).format('YYYY-MM-DD 00:00:00')).getTime()\n    //         let endt=new Date(moment(new Date(self.ctx.data[0].data[0][0])).format('YYYY-MM-DD 23:59:59')).getTime();\n    //         prdt=self.ctx.data.filter(pr=>pr.dataKey.name=='ts_product');\n    //         if(prdt.length){\n    //             $scope.product=prdt[0].data[0][1];\n                \n    //         }\n    //     }\n    // }\n    self.onResize();\n}\n\nself.onResize = function() {\n    $('.mat-form-field-appearance-outline .mat-form-field-outline').css('color',self.ctx.widgetConfig.color);\n    $('.mat-form-field-appearance-outline .mat-form-field-label').css('color',self.ctx.widgetConfig.color);\n    $('.mat-focus-indicator .mat-icon-button .mat-button-base').css('color',self.ctx.widgetConfig.color);\n    $('.mat-form-field-wrapper').css('padding','0px');\n    $('.mat-button-wrapper').css('color',self.ctx.widgetConfig.color);\n    $('.mat-select-arrow').css('color',self.ctx.widgetConfig.color);\n    $('.mat-select-min-line').css('color',self.ctx.widgetConfig.color);\n}\n\nself.onDestroy = function() {}\n",
        "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"required\": [\n        ],\n        \"properties\": {\n            \"topFilterBgColor\":{\n                \"title\":\"Top Filter Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#0062A0\"\n            },\n            \"topButtonBgColor\":{\n                \"title\":\"Top Button Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#0062A0\"\n            },\n            \"compressorNodeBgColor\":{\n                \"title\":\"Compressor Node Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#2F528F\"\n            },\n            \"airConsumptionNodeBgColor\":{\n                \"title\":\"Consumption Node Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#00B050\"\n            }\n        }\n    },\n    \"form\": [\n    {\n        \"key\":\"topFilterBgColor\",\n        \"type\":\"color\"\n    },\n    {\n        \"key\":\"topButtonBgColor\",\n        \"type\":\"color\"\n    },\n    {\n        \"key\":\"compressorNodeBgColor\",\n        \"type\":\"color\"\n    },\n    {\n        \"key\":\"airConsumptionNodeBgColor\",\n        \"type\":\"color\"\n    }\n    ]\n}",
        "dataKeySettingsSchema": "{}\n",
        "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#052c50\",\"color\":\"rgba(255,255,255,0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"Search Widget\",\"showTitleIcon\":false,\"iconColor\":\"rgba(0, 0, 0, 0.87)\",\"iconSize\":\"24px\",\"titleTooltip\":\"\",\"dropShadow\":true,\"enableFullscreen\":true,\"widgetStyle\":{},\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"showLegend\":false}"
      }
    },
    {
      "alias": "water_process",
      "name": "Water process",
      "image": null,
      "description": null,
      "descriptor": {
        "type": "timeseries",
        "sizeX": 8,
        "sizeY": 5,
        "resources": [],
        "templateHtml": "<div class=\"top-content\" style=\"border-bottom: 1px solid black;box-shadow: 3px 2px 6px #b9b9b9; height: 80px;\">\n    <div class=\"ctl-btn\">\n        <button mat-icon-button style=\"padding: 5px 10px;height: 100%; font-size: 20px; text-align: center;display: flex; align-items: center\"><mat-icon color=\"warn\" (click)=\"toggleMonitoring()\">sync</mat-icon></button>\n        <span  style=\"padding: 5px 10px; font-size: 20px;width: 150px;position: absolute; top:23px; left: 36px;\" [style.color]=\"'black'\">\n            <span *ngIf=\"dataMode=='history'\">Interval</span>\n            <span *ngIf=\"dataMode=='realtime'\">Live</span>\n        </span>\n    </div>\n    <div style=\"display:flex; padding-bottom: 10px;\">\n        <div class=\"filter-container\">\n        \t<div class=\"ft-inner\">\n        \t\t<div class=\"first satl-kushtia-config\" style=\"display:flex; gap: 10px;\" [style.background-color]=\"settings?.topFilterBgColor\" [style.color]=\"color\">\n        \t\t\t<mat-form-field class=\"report-type satl-report-ff\" appearance=\"outline\" [style.width]=\"selectedType=='Today'?'100%':selectedType=='Custom'?'33.33%':'50%'\">\n    \t\t\t        <mat-label [style.color]=\"color\">Select type</mat-label>\n                        <mat-select id=\"report-type\"\n                            [(value)]=\"selectType\"\n                            (selectionChange)=\"typeSelect($event)\"\n                            required [disabled]=\"dataMode=='realtime'\">\n                            <mat-option\n                                *ngFor=\"let reportType of reportTypes\"\n                                [value]=\"reportType\">\n                                {{reportType}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n        \t\t\t\n        \t\t\t<mat-form-field *ngIf=\"selectedType=='Daily'||selectedType=='Custom'\" class=\"start-date satl-report-ff\" appearance=\"outline\" floatLabel=\"never\" [style.width]=\"selectedType=='Custom'?'33.33%':'50%'\">\n                        <mat-label [style.color]=\"color\"><span *ngIf=\"selectedType=='Custom'\">Start Date</span><span *ngIf=\"selectedType=='Daily'\">Select Date</span></mat-label>\n                        <input matInput\n                            id=\"startDate\"\n                            [max]=\"today\"\n                            (dateChange)=\"startDateChanege($event)\"\n                            [matDatepicker]=\"startPicker\"\n                            (click)=\"openDatePicker(startPicker)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\n                        <mat-datepicker #startPicker></mat-datepicker>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"selectedType=='Custom'\" class=\"start-date satl-report-ff\" appearance=\"outline\" floatLabel=\"never\" style=\"width: 33.33%\">\n                        <mat-label [style.color]=\"color\">End Date</mat-label>\n                        <input matInput\n                            id=\"endDate\"\n                            [max]=\"today\"\n                            [matDatepicker]=\"endPicker\"\n                            (dateChange)=\"endDateChanege($event)\"\n                            (click)=\"openDatePicker(endPicker)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\n                        <mat-datepicker #endPicker></mat-datepicker>\n                    </mat-form-field>\n    \n                    <mat-form-field\n                        *ngIf=\"selectedType=='Monthly'\"\n                        appearance=\"outline\" class=\"satl-report-ff\" floatLabel=\"never\" style=\"width: 50%;\">\n                        <mat-label\n                            [style.color]=\"color\">\n                            Select Month</mat-label>\n                        <input matInput\n                            id=\"startDate\"\n                            [max]=\"today\"\n                            [matDatepicker]=\"startPicker\"\n                            (click)=\"openDatePicker(startPicker)\"\n                            required>\n                        <mat-datepicker-toggle\n                            matSuffix\n                            [for]=\"startPicker\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #startPicker\n                            startView=\"year\"\n                            (monthSelected)=\"selectStartDate($event, startPicker, 'YYYY-MM')\"\n                            id=\"xDts\">\n                        </mat-datepicker>\n                    </mat-form-field>\n    \n                    <mat-form-field\n                        *ngIf=\"selectedType=='Yearly'\"\n                        appearance=\"outline\" class=\"satl-report-ff\" floatLabel=\"never\" style=\"width: 50%;\">\n                        <mat-label\n                            [style.color]=\"color\">\n                            Select Year</mat-label>\n                        <input matInput\n                            id=\"startDate\"\n                            [max]=\"today\"\n                            [matDatepicker]=\"startPicker\"\n                            (click)=\"openDatePicker(startPicker)\"\n                            required>\n                        <mat-datepicker-toggle\n                            matSuffix\n                            [for]=\"startPicker\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #startPicker\n                            startView=\"multi-year\"\n                            (yearSelected)=\"selectStartDate($event, startPicker, 'YYYY')\">\n                        </mat-datepicker>\n                    </mat-form-field>\n        \t\t</div>\n        \t</div>\n        </div>\n    </div>\n</div>\n<div class=\"wrapper\">\n<div class=\"flow-container\" style=\"margin:0 auto; padding: 10px 0;\" [style.height]=\"height+'px'\" [style.width]=\"width+'px'\">\n    <div class=\"step step1 truckunload\">\n        <div class=\"step-container\">\n            <ul>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"sboxw+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"\n                    color\">\n                        <h2>1000{{unit}}</h2>\n                        <p>Barehole withdrawal</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    \n    <div class=\"connector\" style=\"display: flex; justify-content: center;\" [style.height]=\"connectorHeight+'px'\">\n        <div class=\"vertical-line\">\n            <svg [attr.height]=\"connectorHeight/2\" width=\"20\">\n              <line x1=\"10\" y1=\"0\" x2=\"10\" [attr.y2]=\"connectorHeight/2\" stroke-width=\"2\" stroke=\"#00bedd\" />\n            </svg>\n        </div>\n        <div class=\"vertical-line\" [style.top]=\"(connectorHeight/2)+'px'\">\n            <svg [attr.height]=\"connectorHeight/2\" [attr.width]=\"(width-sboxw+5)+'px'\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              <line [attr.x1]=\"(width-sboxw)/3\" y1=\"0\" [attr.x2]=\"(width-sboxw)/3\" [attr.y2]=\"(connectorHeight/2)-6\" stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\" />\n              <line [attr.x1]=\"(width-sboxw)/3\" y1=\"0\" [attr.x2]=\"width-sboxw\" y2=\"0\" stroke-width=\"4\" stroke=\"#00bedd\" />\n              \n              <line [attr.x1]=\"width-sboxw\" y1=\"0\" [attr.x2]=\"width-sboxw\" [attr.y2]=\"(connectorHeight/2)-6\" stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n            </svg>\n        </div>\n    </div>\n    <div class=\"step step1 truckunload\" style=\"position: relative; height: 80.8px;\">\n        <div class=\"step-container\" style=\"position: absolute;\" [style.left]=\"(width-sboxw)/3+'px'\">\n            <ul [style.gap]=\"(width-(sboxw*2)-((width-sboxw)/3))+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"sboxw+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>WTP Inlet</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"sboxw+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Social Use</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"connector\" style=\"display: flex; justify-content: center;\" [style.height]=\"connectorHeight+'px'\">\n        <div class=\"vertical-line\">\n            <svg [attr.height]=\"connectorHeight\" [attr.width]=\"(width-sboxw+5)+'px'\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              \n              <line [attr.x1]=\"width-sboxw\" y1=\"6\" [attr.x2]=\"width-sboxw\" [attr.y2]=\"connectorHeight\" stroke-width=\"2\" stroke=\"#00bedd\" marker-start=\"url(#arrow)\"/>\n            </svg>\n            <svg [attr.height]=\"connectorHeight*3+240\" [attr.width]=\"(width-sboxw+5)+'px'\" style=\"position: absolute; left:0\" [style.top]=\"'-'+(connectorHeight/2+10)+'px'\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              <line [attr.x1]=\"(width-sboxw)/6\" [attr.y1]=\"0\" [attr.x2]=\"(width-sboxw)/3-sboxw/2+2\" [attr.y2]=\"0\" stroke-width=\"4\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"(width-sboxw)/3-sboxw/2+2+sboxw\" [attr.y1]=\"0\" [attr.x2]=\"(width-sboxw)/6+sboxw+((width-((width-sboxw)/6)-(sboxw*3))/2)\" [attr.y2]=\"0\" stroke-width=\"4\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"(width-sboxw)/6\" [attr.y1]=\"0\" [attr.x2]=\"(width-sboxw)/6\" [attr.y2]=\"connectorHeight*1.5\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              \n              <line [attr.x1]=\"(width-sboxw)/6+sboxw+((width-((width-sboxw)/6)-(sboxw*3))/2)\" [attr.y1]=\"0\" [attr.x2]=\"(width-sboxw)/6+sboxw+((width-((width-sboxw)/6)-(sboxw*3))/2)\" [attr.y2]=\"connectorHeight*1.5\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              <line [attr.x1]=\"(width-sboxw)/3\" [attr.y1]=\"(connectorHeight/2+10)\" [attr.x2]=\"(width-sboxw)/3\" [attr.y2]=\"connectorHeight*1.2\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              \n              <line [attr.x1]=\"(width-sboxw)/3\" [attr.y1]=\"connectorHeight*1.2\" [attr.x2]=\"((width-sboxw)/6)+sboxw/2+((width-((width-sboxw)/6)-(sboxw*3))/2)*0.70\" [attr.y2]=\"connectorHeight*1.2\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"((width-sboxw)/6)+sboxw/2+((width-((width-sboxw)/6)-(sboxw*3))/2)*0.70\" [attr.y1]=\"connectorHeight*1.2\" [attr.x2]=\"((width-sboxw)/6)+sboxw/2+((width-((width-sboxw)/6)-(sboxw*3))/2)*0.70\" [attr.y2]=\"connectorHeight*4+80\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"((width-sboxw)/6)+sboxw/2+((width-((width-sboxw)/6)-(sboxw*3))/2)*0.70\" [attr.y1]=\"connectorHeight*4+80\" [attr.x2]=\"((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)+box2w*1.845\" [attr.y2]=\"connectorHeight*4+80\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              \n              \n              \n              \n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.9+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y1]=\"connectorHeight*3+210\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.9+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y2]=\"connectorHeight*3+170\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y1]=\"connectorHeight*3+170\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.9+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y2]=\"connectorHeight*3+170\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y1]=\"connectorHeight*2+30\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y2]=\"connectorHeight*3+170\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"(width-sboxw)/6+sboxw/2+6\" [attr.y1]=\"connectorHeight*2+30\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y2]=\"connectorHeight*2+30\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-start=\"url(#arrow)\" />\n            </svg>\n        </div>\n    </div>\n    <div class=\"step step1 truckunload\" style=\"position: relative;height: 80.8px;\">\n        <div class=\"step-container\" style=\"position: absolute;\" [style.left]=\"(width-sboxw)/6+'px'\" [style.width]=\"(width-((width-sboxw)/6))+'px'\">\n            <ul [style.gap]=\"((width-((width-sboxw)/6)-(sboxw*3))/2)+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"sboxw+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Boiler Use</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"sboxw+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Process Water</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"sboxw+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>RO Reject Utilization</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"connector\" style=\"display: flex; justify-content: left;\" [style.height]=\"connectorHeight+'px'\">\n        <div class=\"vertical-line\">\n            <svg [attr.height]=\"connectorHeight\" [attr.width]=\"width+'px'\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              <line [attr.x1]=\"((width-sboxw)/6)+sboxw/2\" y1=\"0\" [attr.x2]=\"((width-sboxw)/6)+sboxw/2\" [attr.y2]=\"(connectorHeight/2)\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"((width-sboxw)/12)+box2w/2\" [attr.y1]=\"connectorHeight/2\" [attr.x2]=\"((width-sboxw)/12)+box2w*1.5+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y2]=\"connectorHeight/2\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"((width-sboxw)/12)+box2w/2\" [attr.y1]=\"(connectorHeight/2)\" [attr.x2]=\"((width-sboxw)/12)+box2w/2\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              <line [attr.x1]=\"((width-sboxw)/12)+box2w*1.5+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y1]=\"(connectorHeight/2)\" [attr.x2]=\"((width-sboxw)/12)+box2w*1.5+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              \n              \n              <line [attr.x1]=\"((width-((width-sboxw)/6)-(sboxw*3))/2)+(width-sboxw)/6+sboxw*1.5\" y1=\"0\" [attr.x2]=\"((width-((width-sboxw)/6)-(sboxw*3))/2)+(width-sboxw)/6+sboxw*1.5\" [attr.y2]=\"(connectorHeight/2)\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"box2w*2.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y1]=\"connectorHeight/2\" [attr.x2]=\"box2w*4.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*3\" [attr.y2]=\"connectorHeight/2\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"box2w*2.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y1]=\"(connectorHeight/2)\" [attr.x2]=\"box2w*2.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              <line [attr.x1]=\"box2w*3.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*2\" [attr.y1]=\"(connectorHeight/2)\" [attr.x2]=\"box2w*3.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*2\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              <line [attr.x1]=\"box2w*4.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*3\" [attr.y1]=\"(connectorHeight/2)\" [attr.x2]=\"box2w*4.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*3\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n            </svg>\n            <svg [attr.height]=\"connectorHeight*4+240+3\" [attr.width]=\"box3w+'px'\" style=\"position: absolute; right: 0;\">\n                <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n                <line [attr.x1]=\"box3w/2\" y1=\"6\" [attr.x2]=\"box3w/2\" [attr.y2]=\"connectorHeight*4+237\" stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\" marker-start=\"url(#arrow)\"/>\n            </svg>\n        </div>\n    </div>\n    <div class=\"step step1 truckunload\" style=\"position: relative;height: 80.8px;\">\n        <div class=\"step-container\" style=\"position: absolute; display: flex; justify-content: space-between;\" [style.left]=\"((width-sboxw)/12)+'px'\" [style.gap]=\"((width-(width-sboxw)/12-(box2w*5))*0.3)+'px'\">\n            <ul [style.gap]=\"((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box2w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Boiler 1</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box2w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Boiler 2</p>\n                    </div>\n                </li>\n            </ul>\n            <ul [style.gap]=\"((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box2w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Process Water L1</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box2w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Process Water L2</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box2w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"'orange'\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Lab</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    \n    <div class=\"connector\" style=\"display: flex; justify-content: left;\" [style.height]=\"connectorHeight+'px'\">\n        <div class=\"vertical-line\">\n            <svg [attr.height]=\"connectorHeight\" [attr.width]=\"(width-sboxw/2)+'px'\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              <line [attr.x1]=\"((width-sboxw)/12)+box2w/2\" [attr.y1]=\"'0'\" [attr.x2]=\"((width-sboxw)/12)+box2w/2\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              <line [attr.x1]=\"((width-sboxw)/12)+box2w*1.5+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y1]=\"'0'\" [attr.x2]=\"((width-sboxw)/12)+box2w*1.5+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              \n              \n              \n              <line [attr.x1]=\"box2w*2.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y1]=\"connectorHeight/2\" [attr.x2]=\"box2w*4.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*3\" [attr.y2]=\"connectorHeight/2\" stroke-width=\"2\" stroke=\"#00bedd\" />\n              <line [attr.x1]=\"box2w*2.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y1]=\"0\" [attr.x2]=\"box2w*2.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)\" [attr.y2]=\"(connectorHeight/2)\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"box2w*3.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*2\" [attr.y1]=\"0\" [attr.x2]=\"box2w*3.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*2\" [attr.y2]=\"(connectorHeight/2)\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"box2w*4.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*3\" [attr.y1]=\"0\" [attr.x2]=\"box2w*4.5+((width-sboxw)/12)+((width-(width-sboxw)/12-(box2w*5))*0.3)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)*3\" [attr.y2]=\"connectorHeight/2\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              \n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*3.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2\" [attr.y1]=\"connectorHeight/2\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*3.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n            </svg>\n        </div>\n    </div>\n    \n    <div class=\"step step1 truckunload\" style=\"position: relative;height: 80.8px;\">\n        <div class=\"step-container\" style=\"position: absolute; display: flex; justify-content: space-between;\" [style.left]=\"((width-sboxw)/12+(box2w-box3w)/2)+'px'\" [style.gap]=\"((width-(width-sboxw)/12-(box3w*4))*0.1)+'px'\">\n            <ul [style.gap]=\"(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Process Steam L1</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Process Steam L2</p>\n                    </div>\n                </li>\n            </ul>\n            <ul [style.gap]=\"(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Condensate Return</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>ETP Inlet</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"connector\" style=\"display: flex; justify-content: left;\" [style.height]=\"connectorHeight+'px'\">\n        <div class=\"vertical-line\">\n            <svg [attr.height]=\"connectorHeight\" [attr.width]=\"(width)+'px'\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w/2\" [attr.y1]=\"'0'\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w/2\" [attr.y2]=\"connectorHeight/2\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))\" [attr.y1]=\"'0'\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*1.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))\" [attr.y2]=\"connectorHeight/2\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w/2\" [attr.y1]=\"connectorHeight/2\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*2.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y2]=\"connectorHeight/2\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*2.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y1]=\"6\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*2.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)\" [attr.y2]=\"connectorHeight/2\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-start=\"url(#arrow)\"/>\n              <line [attr.x1]=\"(width-sboxw)/6+(width-(width-sboxw)/6-box3w-(width-(((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2)))+box3w*1.5\" [attr.y1]=\"0\" [attr.x2]=\"(width-sboxw)/6+(width-(width-sboxw)/6-box3w-(width-(((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2)))+box3w*1.5\" [attr.y2]=\"connectorHeight-6\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              \n            </svg>\n        </div>\n    </div>\n    \n    <div class=\"step step1 truckunload\" style=\"position: relative;height: 80.8px;\">\n        <div class=\"step-container\" style=\"position: absolute; display: flex; justify-content: space-between;\" [style.left]=\"(width-sboxw)/6+'px'\" [style.gap]=\"(width-(width-sboxw)/6-box3w-(width-(((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2)))+'px'\">\n            <ul>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"'orange'\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Boiler Blowdown</p>\n                    </div>\n                </li>\n            </ul>\n            <ul [style.gap]=\"(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"'orange'\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>RO Inlet</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" (click)=\"toggleLayer2()\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>RO Reject</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"connector\" style=\"display: flex; justify-content: left;\" [style.height]=\"connectorHeight+'px'\">\n        <div class=\"vertical-line\">\n            <svg [attr.height]=\"connectorHeight+60\" [attr.width]=\"(width)+'px'\" style=\"position: absolute; top: -60px;\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              \n              \n              \n              \n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*4+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2\" [attr.y1]=\"15\" [attr.x2]=\"(((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*4+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))-6\" [attr.y2]=\"15\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n              \n              <line [attr.x1]=\"(((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))\" [attr.y1]=\"15\" [attr.x2]=\"width-box3w/2\" [attr.y2]=\"15\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              \n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2\" [attr.y1]=\"60\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3.5+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2\" [attr.y2]=\"connectorHeight+54\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n            </svg>\n            <svg [attr.height]=\"connectorHeight*2+160\" [attr.width]=\"(width)+'px'\" style=\"position: absolute; bottom: -50px;\">\n                <line [attr.x1]=\"(width-sboxw)/6+box3w/2\" [attr.y1]=\"connectorHeight*2+110\" [attr.x2]=\"(width-sboxw)/6+box3w/2\" [attr.y2]=\"connectorHeight*2+160\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"(width-sboxw)/6+box3w/2\" [attr.y1]=\"connectorHeight*2+158\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))\" [attr.y2]=\"connectorHeight*2+158\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))\" [attr.y1]=\"connectorHeight*2+158\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))\" [attr.y2]=\"40+connectorHeight/2\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              \n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))\" [attr.y1]=\"40+connectorHeight/2\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2-6\" [attr.y2]=\"40+connectorHeight/2\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-end=\"url(#arrow)\"/>\n            </svg>\n        </div>\n    </div>\n    \n    <div class=\"step step1 truckunload\" style=\"position: relative;height: 80.8px;\">\n        <div class=\"step-container\" style=\"position: absolute; display: flex; justify-content: space-between;\" [style.left]=\"(((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2)+'px'\" [style.gap]=\"width*0.05+'px'\">\n            <ul [style.gap]=\"((width-(((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2)-box3w*2))+'px'\">\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>RO Accept</p>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"step-box\" [style.width]=\"box3w+'px'\" data-nodeid=\"1bfc57b0-cae4-11ed-8b01-738772f9cc16\" [style.background-color]=\"settings?.compressorNodeBgColor\" [style.color]=\"color\">\n                        <h2>1000 {{unit}}</h2>\n                        <p>Discharge</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    \n    <div class=\"connector\" style=\"\">\n        <div class=\"vertical-line\">\n            <svg [attr.height]=\"connectorHeight*4+400\" [attr.width]=\"(width)+'px'\" style=\"position: absolute; bottom: 0; left: 0;\">\n              <defs>\n                <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto-start-reverse\">\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" stroke=\"#00bedd\" fill=\"#00bedd\" />\n                </marker>\n              </defs>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+((width-(width-sboxw)/12-(box3w*4))*0.1)+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+box3w*3+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))*2\" [attr.y1]=\"connectorHeight*4+360\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)*0.15\" [attr.y2]=\"connectorHeight*4+360\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)*0.15\" [attr.y1]=\"40\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)*0.15\" [attr.y2]=\"connectorHeight*4+360\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"(width-sboxw)/6-6\" [attr.y1]=\"40\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)*0.15\" [attr.y2]=\"40\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-start=\"url(#arrow)\"/>\n              \n              \n              <line [attr.x1]=\"(width-sboxw)/6+box3w+6\" [attr.y1]=\"connectorHeight*3+280\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*2+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)*0.5\" [attr.y2]=\"connectorHeight*3+280\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-start=\"url(#arrow)\"/>\n              <line [attr.x1]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*2+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)*0.5\" [attr.y1]=\"connectorHeight*3+280\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*2+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)*0.5\" [attr.y2]=\"connectorHeight*0.5+160\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"(((width-sboxw)/12)+((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)+box2w*2)\" [attr.y1]=\"connectorHeight*0.5+160\" [attr.x2]=\"((width-sboxw)/12+(box2w-box3w)/2)+box3w*2+(((width-((width-sboxw)/12)-(box2w*5)-((width-(width-sboxw)/12-(box2w*5))*0.3))/5)-(box3w-box2w))+((width-(width-sboxw)/12-(box3w*4))*0.1)*0.5\" [attr.y2]=\"connectorHeight*0.5+160\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              \n              \n              <line [attr.x1]=\"(width-sboxw)/6-6\" [attr.y1]=\"connectorHeight*3+280\" [attr.x2]=\"(width-sboxw)/24\" [attr.y2]=\"connectorHeight*3+280\"  stroke-width=\"2\" stroke=\"#00bedd\" marker-start=\"url(#arrow)\"/>\n              <line [attr.x1]=\"(width-sboxw)/24\" [attr.y1]=\"connectorHeight*3+280\" [attr.x2]=\"(width-sboxw)/24\" [attr.y2]=\"connectorHeight*0.5+160\"  stroke-width=\"2\" stroke=\"#00bedd\"/>\n              <line [attr.x1]=\"(width-sboxw)/24\" [attr.y1]=\"connectorHeight*0.5+160\" [attr.x2]=\"(width-sboxw)/12\" [attr.y2]=\"connectorHeight*0.5+160\"  stroke-width=\"2\" stroke=\"#00bedd\" />\n            </svg>\n        </div>\n    </div>\n</div>\n</div>\n",
        "templateCss": "*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n.ctl-btn{\n    position: absolute;\n    left:0; \n    top:0;\n    height:72px;\n}\n.wrapper{\n    overflow: auto;\n}\n.step{\n    width: 100%;\n    margin: 0 auto;\n}\n.step .step-container ul{\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    list-style: none;\n    gap: 50px;\n    margin: 0 auto;\n}\n.step .step-box{\n    border: 1px solid blue;\n    text-align: center;\n    border-radius: 10px;\n    padding: 10px;\n    color: white;\n}\n.step-box h2{\n    font-weight: 800;\n    font-size: 25px;\n    line-height: 2.2rem;\n}\n.step-box p{\n    font-size: 15px;\n}\n.connector{\n    position: relative;\n}\n.vertical-line{\n    position: absolute;\n    top: 0;\n}\n\n\n/**\n*==========================================\nCSS for input, date picker and select option\n*============================================\n*/\n.satl-kushtia-config .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: inherit!important; /* Override outline color. */\n}\n\n.mat-form-field-appearance-outline .mat-form-field-infix {\n    padding: 0.7em 0;\n    border-top: 0.4375em solid transparent;\n}\n\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label, .mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.19375em) scale(.75);\n    width: 133.3333333333%;\n}\n.mat-select-arrow,\nspan.mat-select-value-text span.mat-select-min-line{\n    color: inherit!important;\n}\n.mat-select-value{\n    color: white;\n}\nbutton.mat-icon-button{\n    color: white;\n}\n.filter-container{\n    width: 50%;\n    padding: 0 10px;\n\tcolor: white;\n\tmargin: 0 auto;\n}\n.first{\n\tpadding: 5px 10px;\n\tborder-radius: 10px;\n\tfont-size: 20px;\n}\n\n/* CSS For modifying scrollbar */\ndiv.wrapper::-webkit-scrollbar{\n  width: 12px;\n}\ndiv.wrapper{\n  scrollbar-width: thin;\n  scrollbar-color: #90A4AE #CFD8DC;\n}\ndiv.wrapper::-webkit-scrollbar-track{\n  background: #CFD8DC;\n}\ndiv.wrapper::-webkit-scrollbar-thumb{\n  background-color: #90A4AE ;\n  border-radius: 6px;\n  border: 3px solid #CFD8DC;\n}",
        "controllerScript": "self.onInit = function() {\n    const $scope=self.ctx.$scope;\n    deviceList={\n    }\n    $scope.lineStrokeColor='#00bedd';\n    $scope.stepBoxBgColor='blue'\n    $scope.unit='m3';\n    $scope.dataMode='history';\n    \n    $scope.showLayer2=false;\n    $scope.color=self.ctx.widgetConfig.color;\n    $scope.settings=self.ctx.settings;\n    $scope.reportTypes=['Today', 'Daily', 'Monthly', 'Yearly', 'Custom']\n    $scope.today=new Date();\n    let selectType = \"Today\";\n    $scope.selectType = selectType;\n    $scope.selectedType='Today';\n    let selectedStartDate,selectedEndDate;\n    if($('.step-box')){\n        $('.step-box').each(function(index){\n            $(this).click(function(event){\n                if(actionDescriptor){\n                    if($scope.dataMode=='realtime'){\n                        self.ctx.actionsApi.handleWidgetAction(event, actionDescriptor[0], {entityType: 'DEVICE', id: $(this).data('nodeid')}, 'Device Name');\n                    }\n                }\n            })\n        })\n    }\n    let r=0;\n    self.ctx.s=setInterval(function(){\n        r+=10\n        $(\"#svg\").css('transform', 'rotate('+r+'deg)');\n        // $(\"#svg2\").css('transform', 'rotate('+r+'deg)')\n        if(r==100)r=10;\n    }, 100);\n    \n    let actionDescriptor = self.ctx.actionsApi.getActionDescriptors('viewDetails');\n    $scope.actionDescriptor=actionDescriptor;\n    \n    $scope.openDatePicker=function(dp) {\n        dp.open();\n    }\n    \n    $scope.selectStartDate=function(eventData, dp, format) {\n        selectedStartDate = eventData;\n        $(\"#startDate\").val(moment(eventData).format(format));\n        self.ctx.detectChanges();\n        dp.close();\n    }\n    $scope.startDateChanege=function($event){\n        selectedStartDate = $event.value;\n        self.ctx.detectChanges();\n    }\n    $scope.endDateChanege=function($event) {\n        selectedEndDate = $event.value;\n        self.ctx.detectChanges();\n        \n    }\n    $scope.typeSelect = function($event){\n        selectType = $event.value;\n        $scope.selectedType=selectType;\n    }\n    \n    $scope.toggleLayer2=function(){\n        if($scope.showLayer2){\n            $scope.showLayer2=false;\n        }else{\n            $scope.showLayer2=true;\n        }\n        self.ctx.detectChanges();\n    }\n    $scope.toggleMonitoring=function(){\n        $scope.dataMode=$scope.dataMode=='history'?'realtime':'history';\n        if($scope.dataMode=='history'){\n            $scope.unit='m3';\n        }else{\n            $scope.selectedType='Today';\n            $scope.selectType='Today';\n            $scope.unit='m3/h';\n        }\n        self.ctx.detectChanges();\n    }\n    self.onResize();\n}\nself.onResize=function(){\n    const $scope=self.ctx.$scope;\n    $scope.height=self.ctx.height-94;\n    $scope.deviceWidth=self.ctx.width;\n    $scope.width=(self.ctx.width<1200?1200:self.ctx.width)-12;\n    $scope.sboxw=200//self.ctx.width<1200?250:200;\n    $scope.box2w=150;\n    $scope.box3w=170;\n    $scope.connectorHeight=70;\n    self.ctx.detectChanges();\n}\nself.onDestroy=function(){\n    clearInterval(self.ctx.s);\n}\nself.actionSources = function() {\n     return {\n         'viewDetails': {name: 'View details',multiple: false}\n     };\n }",
        "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"required\": [\n        ],\n        \"properties\": {\n            \"topFilterBgColor\":{\n                \"title\":\"Top Filter Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#0062A0\"\n            },\n            \"topButtonBgColor\":{\n                \"title\":\"Top Button Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#0062A0\"\n            },\n            \"compressorNodeBgColor\":{\n                \"title\":\"Compressor Node Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#2F528F\"\n            },\n            \"airConsumptionNodeBgColor\":{\n                \"title\":\"Consumption Node Background Color\",\n                \"type\":\"string\",\n                \"default\": \"#00B050\"\n            }\n        }\n    },\n    \"form\": [\n    {\n        \"key\":\"topFilterBgColor\",\n        \"type\":\"color\"\n    },\n    {\n        \"key\":\"topButtonBgColor\",\n        \"type\":\"color\"\n    },\n    {\n        \"key\":\"compressorNodeBgColor\",\n        \"type\":\"color\"\n    },\n    {\n        \"key\":\"airConsumptionNodeBgColor\",\n        \"type\":\"color\"\n    }\n    ]\n}",
        "dataKeySettingsSchema": "{}",
        "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{\"showLines\":true,\"fillLines\":true,\"showPoints\":false},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#ffc107\",\"settings\":{\"showLines\":true,\"fillLines\":false,\"showPoints\":false},\"_hash\":0.12775350966079668,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"#000000\",\"padding\":\"8px\",\"settings\":{\"topFilterBgColor\":\"#0062A0\",\"topButtonBgColor\":\"#0062A0\",\"compressorNodeBgColor\":\"#2F528F\",\"airConsumptionNodeBgColor\":\"#00B050\"},\"title\":\"Water process\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"mobileHeight\":null,\"showTitleIcon\":false,\"iconColor\":\"rgba(0, 0, 0, 0.87)\",\"iconSize\":\"24px\",\"titleTooltip\":\"\",\"widgetStyle\":{},\"showLegend\":false}"
      }
    }
  ]
}